外观模式：（结构型）
        对外部提供一个类，该类包含对各个子系统操作的组合，客户端不对子系统直接操作，而是操作这个统一入口
        目的：外观模式是一种使用频率非常高的结构型设计模式，它通过引入一个外观角色来简化客户端与子系统之间的交互，
        为复杂的子系统调用提供一个统一的入口，使子系统与客户端的耦合度降低，且客户端调用变得更加方便。
        简而言之，言而简之就是说外观模式是用来简化调用操作的！
  原因： 所以在软件过程中为了完成一项比较复杂的功能的时候，一个客户类需要和多个业务类进行交互，而这些需要交互的业务类，
   也通常以一个整体出现，由于涉及的类比较多，导致使用时代码较为复杂，外观模式就是干这活，简化客户端和其他各种各样的业务接口打交道的麻烦。
   如果让客户端和每个业务类交互则会使软件耦合度成倍的增长。

   使用场景：
   1、当客户端需要调用一系列复杂子系统时候，可以提供一个简单入口的时候使用外观模式。
   2、客户端与子系统有很大的耦合性，使用外观模式可以充分解耦。
   3、再层次化结构中可以使用外观模式的定义系统中每一层的入口，层与层之间不直接产生联系，而通过外观类建立联系，减低层与层之间的耦合。
