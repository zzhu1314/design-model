组合模式：composite
    1.组合模式三个对象：
       A. component(抽象构件：容器):它可以是接口或者抽象类，为叶子构建和子容器构建对象声明接口，在该角色中可以包含所有子类共有的行为的实现和声明。
         在抽象构建中定义了访问及管理它的子构件的方法，如增加子构件，删除子构件，获取子构件（递归）等.
       B. compsite(子容器构建)：它在组合模式中表示容器节点对象，容器结点是子节点，可以是子容器，也可以是叶子构建，它提供一个集合来存储子节点.
       C. leaf(叶子构建)：叶子构建可以说就是各种类型的文件！叶子构建没有子构件。它实现了抽象构建中的定义的行为。
          对于那些访问子容器，删除子容器，增加子容器的就报错(throw new UnSupportedOperationException)
     2.组合模式：整体--部分关系
        子容器之间是一种聚合关系  上级子容器--《包含下级子容器》----叶子节点
     优点：
     可以清楚地定义分层次的复杂类型，表示对象的全部层次或者部分层次  ，它让客户端忽略了层次的差异，方便对整个层次经行控制。
     客户端可以一致的使用一个组合模式或对单个对象，不必关心处理的是单个对象还是整个组合结构，简化了客户端的代码。
     在组合模式种增加新的容器构件和叶子构件都很方便，无需对现有类库进行任何修改，符合开闭原则。
     为树形结构的面向对象实现提供了一种灵活的解决方案，通过叶子对象和容器对象的递归组合可以形成复杂的树形机构，但对树形结构的控制却很简单